{"ast":null,"code":"import React from 'react';\nimport { ButtonTypeEnum, MessageActionStatusEnum } from '@novu/shared';\nimport styled from '@emotion/styled';\nimport { cx, css } from '@emotion/css';\nimport { NotificationButton } from './NotificationItemButton';\nimport { useStyles } from '../../../../store/styles';\nexport function ActionContainer({\n  action,\n  onActionClick\n}) {\n  const status = action === null || action === void 0 ? void 0 : action.status;\n  const buttons = action === null || action === void 0 ? void 0 : action.buttons;\n  const [buttonsContainerStyles, primaryButtonStyles, secondaryButtonStyles] = useStyles(['notifications.listItem.buttons.root', 'notifications.listItem.buttons.primary', 'notifications.listItem.buttons.secondary']);\n  function handleOnClick(buttonType) {\n    onActionClick(buttonType);\n  }\n  return React.createElement(TemplateContainerWrap, null, React.createElement(TemplateContainer, {\n    className: cx('nc-notifications-list-item-buttons', css(buttonsContainerStyles))\n  }, status === MessageActionStatusEnum.DONE ? null : buttons === null || buttons === void 0 ? void 0 : buttons.map((button, buttonIndex) => React.createElement(NotificationButton, {\n    key: button.type,\n    className: cx('nc-notifications-list-item-button', css(button.type === ButtonTypeEnum.PRIMARY ? primaryButtonStyles : secondaryButtonStyles)),\n    onActionClick: buttonType => handleOnClick(buttonType),\n    messageAction: action,\n    buttonIndex: buttonIndex\n  }))));\n}\nconst TemplateContainerWrap = styled.div`\n  margin-left: 10px;\n  margin-right: 10px;\n`;\nconst TemplateContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  max-height: 50px;\n  margin-left: -15px;\n  margin-right: -15px;\n`;","map":{"version":3,"names":["React","ButtonTypeEnum","MessageActionStatusEnum","styled","cx","css","NotificationButton","useStyles","ActionContainer","action","onActionClick","status","buttons","buttonsContainerStyles","primaryButtonStyles","secondaryButtonStyles","handleOnClick","buttonType","createElement","TemplateContainerWrap","TemplateContainer","className","DONE","map","button","buttonIndex","key","type","PRIMARY","messageAction","div"],"sources":["../../../../../../src/components/notification-center/components/notification-item/ActionContainer.tsx"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAyBC,cAAc,EAAEC,uBAAuB,QAAQ,cAAc;AACtF,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,EAAE,EAAEC,GAAG,QAAQ,cAAc;AAEtC,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,SAAS,QAAQ,0BAA0B;AAOpD,OAAM,SAAUC,eAAeA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAyB;EAC9E,MAAMC,MAAM,GAAGF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,MAAM;EAC7B,MAAMC,OAAO,GAAGH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,OAAO;EAC/B,MAAM,CAACC,sBAAsB,EAAEC,mBAAmB,EAAEC,qBAAqB,CAAC,GAAGR,SAAS,CAAC,CACrF,qCAAqC,EACrC,wCAAwC,EACxC,0CAA0C,CAC3C,CAAC;EAEF,SAASS,aAAaA,CAACC,UAA0B;IAC/CP,aAAa,CAACO,UAAU,CAAC;EAC3B;EAEA,OACEjB,KAAA,CAAAkB,aAAA,CAACC,qBAAqB,QACpBnB,KAAA,CAAAkB,aAAA,CAACE,iBAAiB;IAACC,SAAS,EAAEjB,EAAE,CAAC,oCAAoC,EAAEC,GAAG,CAACQ,sBAAsB,CAAC;EAAC,GAChGF,MAAM,KAAKT,uBAAuB,CAACoB,IAAI,GACpC,IAAI,GACJV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,GAAG,CAAC,CAACC,MAAM,EAAEC,WAAW,KAC/BzB,KAAA,CAAAkB,aAAA,CAACZ,kBAAkB;IACjBoB,GAAG,EAAEF,MAAM,CAACG,IAAI;IAChBN,SAAS,EAAEjB,EAAE,CACX,mCAAmC,EACnCC,GAAG,CAACmB,MAAM,CAACG,IAAI,KAAK1B,cAAc,CAAC2B,OAAO,GAAGd,mBAAmB,GAAGC,qBAAqB,CAAC,CAC1F;IACDL,aAAa,EAAGO,UAAU,IAAKD,aAAa,CAACC,UAAU,CAAC;IACxDY,aAAa,EAAEpB,MAAM;IACrBgB,WAAW,EAAEA;EAAW,EAE3B,CAAC,CACY,CACE;AAE5B;AAEA,MAAMN,qBAAqB,GAAGhB,MAAM,CAAC2B,GAAG;;;CAGvC;AAED,MAAMV,iBAAiB,GAAGjB,MAAM,CAAC2B,GAAG;;;;;;;CAOnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}