{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { useNovuContext } from './useNovuContext';\nimport { getNextPageParam } from '../utils/pagination';\nimport { useFetchNotificationsQueryKey } from './useFetchNotificationsQueryKey';\nexport const useFetchNotifications = ({\n  query\n} = {}, options = {}) => {\n  const {\n    apiService,\n    isSessionInitialized,\n    fetchingStrategy\n  } = useNovuContext();\n  const fetchNotificationsQueryKey = useFetchNotificationsQueryKey();\n  const result = useInfiniteQuery(fetchNotificationsQueryKey, ({\n    pageParam = 0\n  }) => apiService.getNotificationsList(pageParam, query), Object.assign(Object.assign({}, options), {\n    enabled: isSessionInitialized && fetchingStrategy.fetchNotifications,\n    getNextPageParam\n  }));\n  const refetch = (_a = {}) => {\n    var {\n        page\n      } = _a,\n      otherOptions = __rest(_a, [\"page\"]);\n    if (page !== undefined) {\n      result.fetchNextPage(Object.assign({\n        pageParam: page\n      }, otherOptions));\n    } else {\n      result.refetch(otherOptions);\n    }\n  };\n  return Object.assign(Object.assign({}, result), {\n    refetch\n  });\n};","map":{"version":3,"names":["useInfiniteQuery","useNovuContext","getNextPageParam","useFetchNotificationsQueryKey","useFetchNotifications","query","options","apiService","isSessionInitialized","fetchingStrategy","fetchNotificationsQueryKey","result","pageParam","getNotificationsList","Object","assign","enabled","fetchNotifications","refetch","_a","page","otherOptions","__rest","undefined","fetchNextPage"],"sources":["../../../src/hooks/useFetchNotifications.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,SAASA,gBAAgB,QAAiC,uBAAuB;AAKjF,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,6BAA6B,QAAQ,iCAAiC;AAE/E,OAAO,MAAMC,qBAAqB,GAAGA,CACnC;EAAEC;AAAK,IAA8B,EAAE,EACvCC,OAAA,GAAsG,EAAE,KACtG;EACF,MAAM;IAAEC,UAAU;IAAEC,oBAAoB;IAAEC;EAAgB,CAAE,GAAGR,cAAc,EAAE;EAC/E,MAAMS,0BAA0B,GAAGP,6BAA6B,EAAE;EAElE,MAAMQ,MAAM,GAAGX,gBAAgB,CAC7BU,0BAA0B,EAC1B,CAAC;IAAEE,SAAS,GAAG;EAAC,CAAE,KAAKL,UAAU,CAACM,oBAAoB,CAACD,SAAS,EAAEP,KAAK,CAAC,EAAAS,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAEnET,OAAO;IACVU,OAAO,EAAER,oBAAoB,IAAIC,gBAAgB,CAACQ,kBAAkB;IACpEf;EAAgB,GAEnB;EAED,MAAMgB,OAAO,GAAqCA,CAACC,EAAA,GAA4B,EAAE,KAAI;QAAlC;QAAEC;MAAI,IAAAD,EAAwB;MAAnBE,YAAY,GAAAC,MAAA,CAAAH,EAAA,EAAvB,QAAyB,CAAF;IACxE,IAAIC,IAAI,KAAKG,SAAS,EAAE;MACtBZ,MAAM,CAACa,aAAa,CAAAV,MAAA,CAAAC,MAAA;QAAGH,SAAS,EAAEQ;MAAI,GAAKC,YAAY,EAAG;KAC3D,MAAM;MACLV,MAAM,CAACO,OAAO,CAACG,YAAY,CAAC;;EAEhC,CAAC;EAED,OAAAP,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKJ,MAAM;IACTO;EAAO;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}