{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useCallback } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useNovuContext } from './useNovuContext';\nimport { useFetchUserPreferencesQueryKey } from './useFetchUserPreferencesQueryKey';\nexport const useUpdateUserPreferences = (_a = {}) => {\n  var {\n      onSuccess,\n      onError\n    } = _a,\n    options = __rest(_a, [\"onSuccess\", \"onError\"]);\n  const queryClient = useQueryClient();\n  const {\n    apiService\n  } = useNovuContext();\n  const userPreferencesQueryKey = useFetchUserPreferencesQueryKey();\n  const updatePreferenceChecked = useCallback(({\n    templateId,\n    checked,\n    channelType\n  }) => {\n    queryClient.setQueryData(userPreferencesQueryKey, oldUserPreferences => oldUserPreferences.map(setting => {\n      if (setting.template._id === templateId) {\n        return Object.assign(Object.assign({}, setting), {\n          preference: Object.assign(Object.assign({}, setting.preference), {\n            channels: Object.assign(Object.assign({}, setting.preference.channels), {\n              [channelType]: checked\n            })\n          })\n        });\n      }\n      return setting;\n    }));\n  }, [queryClient]);\n  const _b = useMutation(variables => apiService.updateSubscriberPreference(variables.templateId, variables.channelType, variables.checked), Object.assign(Object.assign({}, options), {\n      onSuccess: (data, variables, context) => {\n        queryClient.setQueryData(userPreferencesQueryKey, oldUserPreferences => oldUserPreferences.map(setting => {\n          if (setting.template._id === data.template._id) {\n            return data;\n          }\n          return setting;\n        }));\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(data, variables, context);\n      },\n      onError: (error, variables, context) => {\n        updatePreferenceChecked({\n          templateId: variables.templateId,\n          checked: !variables.checked,\n          channelType: variables.channelType\n        });\n        onError === null || onError === void 0 ? void 0 : onError(error, variables, context);\n      }\n    })),\n    {\n      mutate\n    } = _b,\n    result = __rest(_b, [\"mutate\"]);\n  const updateUserPreferences = useCallback(variables => {\n    updatePreferenceChecked(variables);\n    mutate(variables);\n  }, [updatePreferenceChecked, mutate]);\n  return Object.assign(Object.assign({}, result), {\n    updateUserPreferences\n  });\n};","map":{"version":3,"names":["useCallback","useMutation","useQueryClient","useNovuContext","useFetchUserPreferencesQueryKey","useUpdateUserPreferences","_a","onSuccess","onError","options","__rest","queryClient","apiService","userPreferencesQueryKey","updatePreferenceChecked","templateId","checked","channelType","setQueryData","oldUserPreferences","map","setting","template","_id","Object","assign","preference","channels","_b","variables","updateSubscriberPreference","data","context","error","mutate","result","updateUserPreferences"],"sources":["../../../src/hooks/useUpdateUserPreferences.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}