{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useNovuContext } from './useNovuContext';\nimport { useFetchNotificationsQueryKey } from './useFetchNotificationsQueryKey';\nexport const useUpdateAction = (_a = {}) => {\n  var {\n      onSuccess\n    } = _a,\n    options = __rest(_a, [\"onSuccess\"]);\n  const queryClient = useQueryClient();\n  const {\n    apiService\n  } = useNovuContext();\n  const fetchNotificationsQueryKey = useFetchNotificationsQueryKey();\n  const _b = useMutation(variables => apiService.updateAction(variables.messageId, variables.actionButtonType, variables.status, variables.payload), Object.assign(Object.assign({}, options), {\n      onSuccess: (newMessage, variables, context) => {\n        queryClient.setQueriesData({\n          queryKey: fetchNotificationsQueryKey,\n          exact: false\n        }, infiniteData => {\n          const pages = infiniteData.pages.map(page => {\n            const data = page.data.map(message => {\n              if (message._id === variables.messageId) {\n                return newMessage;\n              }\n              return message;\n            });\n            return Object.assign(Object.assign({}, page), {\n              data\n            });\n          });\n          return {\n            pageParams: infiniteData.pageParams,\n            pages\n          };\n        });\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(newMessage, variables, context);\n      }\n    })),\n    {\n      mutate\n    } = _b,\n    result = __rest(_b, [\"mutate\"]);\n  return Object.assign(Object.assign({}, result), {\n    updateAction: mutate\n  });\n};","map":{"version":3,"names":["useMutation","useQueryClient","useNovuContext","useFetchNotificationsQueryKey","useUpdateAction","_a","onSuccess","options","__rest","queryClient","apiService","fetchNotificationsQueryKey","_b","variables","updateAction","messageId","actionButtonType","status","payload","Object","assign","newMessage","context","setQueriesData","queryKey","exact","infiniteData","pages","map","page","data","message","_id","pageParams","mutate","result"],"sources":["../../../src/hooks/useUpdateAction.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA,SAASA,WAAW,EAAEC,cAAc,QAA0C,uBAAuB;AAGrG,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,6BAA6B,QAAQ,iCAAiC;AAS/E,OAAO,MAAMC,eAAe,GAAGA,CAACC,EAAA,GAKkC,EAAE,KAAI;MALxC;MAC9BC;IAAS,IAAAD,EAIyD;IAH/DE,OAAO,GAAAC,MAAA,CAAAH,EAAA,EAFoB,aAG/B,CADW;EAIV,MAAMI,WAAW,GAAGR,cAAc,EAAE;EACpC,MAAM;IAAES;EAAU,CAAE,GAAGR,cAAc,EAAE;EACvC,MAAMS,0BAA0B,GAAGR,6BAA6B,EAAE;EAElE,MAAMS,EAAA,GAAwBZ,WAAW,CACtCa,SAAS,IACRH,UAAU,CAACI,YAAY,CAACD,SAAS,CAACE,SAAS,EAAEF,SAAS,CAACG,gBAAgB,EAAEH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACK,OAAO,CAAC,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAE1Gb,OAAO;MACVD,SAAS,EAAEA,CAACe,UAAU,EAAER,SAAS,EAAES,OAAO,KAAI;QAC5Cb,WAAW,CAACc,cAAc,CACxB;UAAEC,QAAQ,EAAEb,0BAA0B;UAAEc,KAAK,EAAE;QAAK,CAAE,EACrDC,YAAY,IAAI;UACf,MAAMC,KAAK,GAAGD,YAAY,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAI;YAC5C,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACF,GAAG,CAAEG,OAAO,IAAI;cACrC,IAAIA,OAAO,CAACC,GAAG,KAAKnB,SAAS,CAACE,SAAS,EAAE;gBACvC,OAAOM,UAAU;;cAGnB,OAAOU,OAAO;YAChB,CAAC,CAAC;YAEF,OAAAZ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKS,IAAI;cACPC;YAAI;UAER,CAAC,CAAC;UAEF,OAAO;YACLG,UAAU,EAAEP,YAAY,CAACO,UAAU;YACnCN;WACD;QACH,CAAC,CACF;QACDrB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGe,UAAU,EAAER,SAAS,EAAES,OAAO,CAAC;MAC7C;IAAC,GAEJ;IAjCK;MAAEY;IAAM,IAAAtB,EAiCb;IAjCkBuB,MAAM,GAAA3B,MAAA,CAAAI,EAAA,EAAnB,UAAqB,CAiC1B;EAED,OAAAO,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYe,MAAM;IAAErB,YAAY,EAAEoB;EAAM;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}