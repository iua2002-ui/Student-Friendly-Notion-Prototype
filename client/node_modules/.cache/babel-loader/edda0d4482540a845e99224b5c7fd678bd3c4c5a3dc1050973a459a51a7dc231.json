{"ast":null,"code":"import { useQuery } from '@tanstack/react-query';\nimport { useNovuContext } from './useNovuContext';\nimport { useFetchUserPreferencesQueryKey } from './useFetchUserPreferencesQueryKey';\nexport const useFetchUserPreferences = (options = {}) => {\n  const {\n    apiService,\n    isSessionInitialized,\n    fetchingStrategy\n  } = useNovuContext();\n  const userPreferencesQueryKey = useFetchUserPreferencesQueryKey();\n  const result = useQuery(userPreferencesQueryKey, () => apiService.getUserPreference(), Object.assign(Object.assign({}, options), {\n    enabled: isSessionInitialized && fetchingStrategy.fetchUserPreferences\n  }));\n  return result;\n};","map":{"version":3,"names":["useQuery","useNovuContext","useFetchUserPreferencesQueryKey","useFetchUserPreferences","options","apiService","isSessionInitialized","fetchingStrategy","userPreferencesQueryKey","result","getUserPreference","Object","assign","enabled","fetchUserPreferences"],"sources":["../../../src/hooks/useFetchUserPreferences.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,QAAQ,QAAyB,uBAAuB;AAGjE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,+BAA+B,QAAQ,mCAAmC;AAEnF,OAAO,MAAMC,uBAAuB,GAAGA,CACrCC,OAAA,GAAwF,EAAE,KACxF;EACF,MAAM;IAAEC,UAAU;IAAEC,oBAAoB;IAAEC;EAAgB,CAAE,GAAGN,cAAc,EAAE;EAC/E,MAAMO,uBAAuB,GAAGN,+BAA+B,EAAE;EAEjE,MAAMO,MAAM,GAAGT,QAAQ,CACrBQ,uBAAuB,EACvB,MAAMH,UAAU,CAACK,iBAAiB,EAAE,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAE/BR,OAAO;IACVS,OAAO,EAAEP,oBAAoB,IAAIC,gBAAgB,CAACO;EAAoB,GAEzE;EAED,OAAOL,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}