{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nconst GROUP_POSITIONS = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  apart: \"space-between\"\n};\nvar useStyles = createStyles((theme, {\n  spacing,\n  position,\n  noWrap,\n  grow,\n  align,\n  count\n}) => ({\n  root: {\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: align || \"center\",\n    flexWrap: noWrap ? \"nowrap\" : \"wrap\",\n    justifyContent: GROUP_POSITIONS[position],\n    gap: theme.fn.size({\n      size: spacing,\n      sizes: theme.spacing\n    }),\n    \"& > *\": {\n      boxSizing: \"border-box\",\n      maxWidth: grow ? `calc(${100 / count}% - ${theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      }) - theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      }) / count}px)` : void 0,\n      flexGrow: grow ? 1 : 0\n    }\n  }\n}));\nexport default useStyles;\nexport { GROUP_POSITIONS };","map":{"version":3,"names":["GROUP_POSITIONS","left","center","right","apart","useStyles","createStyles","theme","spacing","position","noWrap","grow","align","count","root","boxSizing","display","flexDirection","alignItems","flexWrap","justifyContent","gap","fn","size","sizes","maxWidth","flexGrow"],"sources":["/Users/isabelagadagba/Downloads/blog-main 2/NotionReact/client/node_modules/@mantine/core/src/Group/Group.styles.ts"],"sourcesContent":["import React from 'react';\nimport { createStyles, MantineNumberSize } from '@mantine/styles';\n\nexport type GroupPosition = 'right' | 'center' | 'left' | 'apart';\n\nexport interface GroupStylesParams {\n  position: GroupPosition;\n  noWrap: boolean;\n  grow: boolean;\n  spacing: MantineNumberSize;\n  align: React.CSSProperties['alignItems'];\n  count: number;\n}\n\nexport const GROUP_POSITIONS = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  apart: 'space-between',\n};\n\nexport default createStyles(\n  (theme, { spacing, position, noWrap, grow, align, count }: GroupStylesParams) => ({\n    root: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: align || 'center',\n      flexWrap: noWrap ? 'nowrap' : 'wrap',\n      justifyContent: GROUP_POSITIONS[position],\n      gap: theme.fn.size({ size: spacing, sizes: theme.spacing }),\n      '& > *': {\n        boxSizing: 'border-box',\n        maxWidth: grow\n          ? `calc(${100 / count}% - ${\n              theme.fn.size({ size: spacing, sizes: theme.spacing }) -\n              theme.fn.size({ size: spacing, sizes: theme.spacing }) / count\n            }px)`\n          : undefined,\n        flexGrow: grow ? 1 : 0,\n      },\n    },\n  })\n);\n"],"mappings":";AACY,MAACA,eAAe,GAAG;EAC7BC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,UAAU;EACjBC,KAAK,EAAE;AACT;AACA,IAAAC,SAAA,GAAeC,YAAY,CAAC,CAACC,KAAK,EAAE;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAK,CAAE,MAAM;EACzFC,IAAI,EAAE;IACJC,SAAS,EAAE,YAAY;IACvBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAEN,KAAK,IAAI,QAAQ;IAC7BO,QAAQ,EAAET,MAAM,GAAG,QAAQ,GAAG,MAAM;IACpCU,cAAc,EAAEpB,eAAe,CAACS,QAAQ,CAAC;IACzCY,GAAG,EAAEd,KAAK,CAACe,EAAE,CAACC,IAAI,CAAC;MAAEA,IAAI,EAAEf,OAAO;MAAEgB,KAAK,EAAEjB,KAAK,CAACC;IAAO,CAAE,CAAC;IAC3D,OAAO,EAAE;MACPO,SAAS,EAAE,YAAY;MACvBU,QAAQ,EAAEd,IAAI,GAAI,QAAO,GAAG,GAAGE,KAAM,OAAMN,KAAK,CAACe,EAAE,CAACC,IAAI,CAAC;QAAEA,IAAI,EAAEf,OAAO;QAAEgB,KAAK,EAAEjB,KAAK,CAACC;MAAO,CAAE,CAAC,GAAGD,KAAK,CAACe,EAAE,CAACC,IAAI,CAAC;QAAEA,IAAI,EAAEf,OAAO;QAAEgB,KAAK,EAAEjB,KAAK,CAACC;MAAO,CAAE,CAAC,GAAGK,KAAM,KAAI,GAAG,KAAK,CAAC;MAChLa,QAAQ,EAAEf,IAAI,GAAG,CAAC,GAAG;IAC3B;EACA;AACA,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}