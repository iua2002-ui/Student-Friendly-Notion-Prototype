{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useCallback } from 'react';\nimport { useFetchUserGlobalPreferencesQueryKey } from './useFetchUserGlobalPreferencesQueryKey';\nimport { useNovuContext } from './useNovuContext';\nexport const useUpdateUserGlobalPreferences = (_a = {}) => {\n  var {\n      onSuccess,\n      onError\n    } = _a,\n    options = __rest(_a, [\"onSuccess\", \"onError\"]);\n  const queryClient = useQueryClient();\n  const {\n    apiService\n  } = useNovuContext();\n  const userGlobalPreferencesQueryKey = useFetchUserGlobalPreferencesQueryKey();\n  const updateGlobalPreferenceChecked = useCallback(({\n    enabled,\n    preferences\n  }) => {\n    queryClient.setQueryData(userGlobalPreferencesQueryKey, old => {\n      return {\n        preference: {\n          enabled: enabled !== null && enabled !== void 0 ? enabled : old.preference.enabled,\n          channels: Object.assign(Object.assign({}, old.preference.channels), preferences.reduce((acc, {\n            channelType,\n            enabled: channelEnabled\n          }) => {\n            acc[channelType] = channelEnabled;\n            return acc;\n          }, {}))\n        }\n      };\n    });\n  }, [queryClient]);\n  const _b = useMutation(variables => apiService.updateSubscriberGlobalPreference(variables.preferences, variables.enabled), Object.assign(Object.assign({}, options), {\n      onSuccess: (data, variables, context) => {\n        queryClient.setQueryData(userGlobalPreferencesQueryKey, () => [data]);\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(data, variables, context);\n      },\n      onError: (error, variables, context) => {\n        var _a;\n        updateGlobalPreferenceChecked({\n          enabled: (_a = !variables.enabled) !== null && _a !== void 0 ? _a : undefined,\n          preferences: variables.preferences\n        });\n        onError === null || onError === void 0 ? void 0 : onError(error, variables, context);\n      }\n    })),\n    {\n      mutate\n    } = _b,\n    result = __rest(_b, [\"mutate\"]);\n  const updateUserGlobalPreferences = useCallback(variables => {\n    updateGlobalPreferenceChecked(variables);\n    mutate(variables);\n  }, [updateGlobalPreferenceChecked, mutate]);\n  return Object.assign(Object.assign({}, result), {\n    updateUserGlobalPreferences\n  });\n};","map":{"version":3,"names":["useMutation","useQueryClient","useCallback","useFetchUserGlobalPreferencesQueryKey","useNovuContext","useUpdateUserGlobalPreferences","_a","onSuccess","onError","options","__rest","queryClient","apiService","userGlobalPreferencesQueryKey","updateGlobalPreferenceChecked","enabled","preferences","setQueryData","old","preference","channels","Object","assign","reduce","acc","channelType","channelEnabled","_b","variables","updateSubscriberGlobalPreference","data","context","error","undefined","mutate","result","updateUserGlobalPreferences"],"sources":["../../../src/hooks/useUpdateUserGlobalPreferences.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AACA,SAASA,WAAW,EAAsBC,cAAc,QAAQ,uBAAuB;AACvF,SAASC,WAAW,QAAQ,OAAO;AAEnC,SAASC,qCAAqC,QAAQ,yCAAyC;AAC/F,SAASC,cAAc,QAAQ,kBAAkB;AAOjD,OAAO,MAAMC,8BAA8B,GAAGA,CAACC,EAAA,GAIsD,EAAE,KAAI;MAJ5D;MAC7CC,SAAS;MACTC;IAAO,IAAAF,EAE8F;IADlGG,OAAO,GAAAC,MAAA,CAAAJ,EAAA,EAHmC,wBAI9C,CADW;EAEV,MAAMK,WAAW,GAAGV,cAAc,EAAE;EACpC,MAAM;IAAEW;EAAU,CAAE,GAAGR,cAAc,EAAE;EACvC,MAAMS,6BAA6B,GAAGV,qCAAqC,EAAE;EAE7E,MAAMW,6BAA6B,GAAGZ,WAAW,CAC/C,CAAC;IAAEa,OAAO;IAAEC;EAAW,CAAyC,KAAI;IAClEL,WAAW,CAACM,YAAY,CAAgCJ,6BAA6B,EAAGK,GAAG,IAAI;MAC7F,OAAO;QACLC,UAAU,EAAE;UACVJ,OAAO,EAAEA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIG,GAAG,CAACC,UAAU,CAACJ,OAAO;UAC1CK,QAAQ,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACHJ,GAAG,CAACC,UAAU,CAACC,QAAQ,GACvBJ,WAAW,CAACO,MAAM,CAAC,CAACC,GAAG,EAAE;YAAEC,WAAW;YAAEV,OAAO,EAAEW;UAAc,CAAE,KAAI;YACtEF,GAAG,CAACC,WAAW,CAAC,GAAGC,cAAc;YAEjC,OAAOF,GAAG;UACZ,CAAC,EAAE,EAA6B,CAAC;;OAGtC;IACH,CAAC,CAAC;EACJ,CAAC,EACD,CAACb,WAAW,CAAC,CACd;EAED,MAAMgB,EAAA,GAAwB3B,WAAW,CAItC4B,SAAS,IAAKhB,UAAU,CAACiB,gCAAgC,CAACD,SAAS,CAACZ,WAAW,EAAEY,SAAS,CAACb,OAAO,CAAC,EAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACjGb,OAAO;MACVF,SAAS,EAAEA,CAACuB,IAAI,EAAEF,SAAS,EAAEG,OAAO,KAAI;QACtCpB,WAAW,CAACM,YAAY,CAAkCJ,6BAA6B,EAAE,MAAM,CAACiB,IAAI,CAAC,CAAC;QACtGvB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAGuB,IAAI,EAAEF,SAAS,EAAEG,OAAO,CAAC;MACvC,CAAC;MACDvB,OAAO,EAAEA,CAACwB,KAAK,EAAEJ,SAAS,EAAEG,OAAO,KAAI;;QACrCjB,6BAA6B,CAAC;UAC5BC,OAAO,EAAE,CAAAT,EAAA,IAACsB,SAAS,CAACb,OAAO,cAAAT,EAAA,cAAAA,EAAA,GAAI2B,SAAS;UACxCjB,WAAW,EAAEY,SAAS,CAACZ;SACxB,CAAC;QACFR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGwB,KAAK,EAAEJ,SAAS,EAAEG,OAAO,CAAC;MACtC;IAAC,GACD;IAjBI;MAAEG;IAAM,IAAAP,EAiBZ;IAjBiBQ,MAAM,GAAAzB,MAAA,CAAAiB,EAAA,EAAnB,UAAqB,CAiBzB;EAEF,MAAMS,2BAA2B,GAAGlC,WAAW,CAC5C0B,SAAgD,IAAI;IACnDd,6BAA6B,CAACc,SAAS,CAAC;IACxCM,MAAM,CAACN,SAAS,CAAC;EACnB,CAAC,EACD,CAACd,6BAA6B,EAAEoB,MAAM,CAAC,CACxC;EAED,OAAAb,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYa,MAAM;IAAEC;EAA2B;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}