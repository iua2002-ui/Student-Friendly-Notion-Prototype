{"ast":null,"code":"import React from 'react';\nimport styled from '@emotion/styled';\nimport { css, cx } from '@emotion/css';\nimport { Accordion, Divider } from '@mantine/core';\nimport { useStyles } from '../../../../store/styles';\nimport { useNovuTheme, useUpdateUserPreferences } from '../../../../hooks';\nimport { WorkflowHeader } from './WorkflowHeader';\nimport { getChannel } from './channels';\nimport { ChannelPreference } from './ChannelPreference';\nconst dividerClassName = baseTheme => {\n  var _a;\n  return css`\n  border-top-color: ${(_a = baseTheme === null || baseTheme === void 0 ? void 0 : baseTheme.accordion) === null || _a === void 0 ? void 0 : _a.dividerColor};\n`;\n};\nconst ChannelsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  gap: 20px;\n`;\nfunction getEnabledChannels(channels) {\n  const keys = Object.keys(channels);\n  const list = keys.filter(key => channels[key]).map(channel => getChannel(channel).label);\n  return list.join(', ');\n}\nexport const UserPreferenceItem = ({\n  preferenceSettings\n}) => {\n  var _a, _b, _c;\n  const {\n    theme\n  } = useNovuTheme();\n  const {\n    isLoading: isPreferenceUpdating,\n    updateUserPreferences\n  } = useUpdateUserPreferences();\n  const [itemDividerStyles] = useStyles(['preferences.item.divider']);\n  const baseTheme = theme === null || theme === void 0 ? void 0 : theme.userPreferences;\n  const channelsKeys = Object.keys((_a = preferenceSettings === null || preferenceSettings === void 0 ? void 0 : preferenceSettings.preference) === null || _a === void 0 ? void 0 : _a.channels);\n  const channelsPreference = (_b = preferenceSettings === null || preferenceSettings === void 0 ? void 0 : preferenceSettings.preference) === null || _b === void 0 ? void 0 : _b.channels;\n  const handleUpdateChannelPreference = (type, checked) => {\n    updateUserPreferences({\n      templateId: preferenceSettings.template._id,\n      channelType: type,\n      checked\n    });\n  };\n  return React.createElement(Accordion.Item, {\n    value: preferenceSettings.template._id,\n    \"data-test-id\": \"workflow-list-item\"\n  }, React.createElement(Accordion.Control, null, React.createElement(WorkflowHeader, {\n    theme: baseTheme,\n    label: (_c = preferenceSettings.template) === null || _c === void 0 ? void 0 : _c.name,\n    channels: getEnabledChannels(channelsPreference)\n  })), React.createElement(Accordion.Panel, null, React.createElement(ChannelsWrapper, null, React.createElement(Divider, {\n    className: cx('nc-preferences-item-divider', dividerClassName(baseTheme), css(itemDividerStyles))\n  }), channelsKeys.map(key => React.createElement(ChannelPreference, {\n    key: key,\n    type: key,\n    active: channelsPreference[key],\n    disabled: isPreferenceUpdating,\n    handleUpdateChannelPreference: handleUpdateChannelPreference\n  })))));\n};","map":{"version":3,"names":["React","styled","css","cx","Accordion","Divider","useStyles","useNovuTheme","useUpdateUserPreferences","WorkflowHeader","getChannel","ChannelPreference","dividerClassName","baseTheme","_a","accordion","dividerColor","ChannelsWrapper","div","getEnabledChannels","channels","keys","Object","list","filter","key","map","channel","label","join","UserPreferenceItem","preferenceSettings","theme","isLoading","isPreferenceUpdating","updateUserPreferences","itemDividerStyles","userPreferences","channelsKeys","preference","channelsPreference","_b","handleUpdateChannelPreference","type","checked","templateId","template","_id","channelType","createElement","Item","value","Control","_c","name","Panel","className","active","disabled"],"sources":["../../../../../../src/components/notification-center/components/user-preference/UserPreferenceItem.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}