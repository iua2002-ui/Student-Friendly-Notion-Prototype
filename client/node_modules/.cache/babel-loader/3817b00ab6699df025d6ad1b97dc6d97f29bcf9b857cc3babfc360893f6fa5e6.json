{"ast":null,"code":"import { useQuery } from '@tanstack/react-query';\nimport { useNovuContext } from './useNovuContext';\nimport { ORGANIZATION_QUERY_KEY } from './queryKeys';\nimport { useSetQueryKey } from './useSetQueryKey';\nexport const useFetchOrganization = (options = {}) => {\n  const {\n    apiService,\n    isSessionInitialized,\n    fetchingStrategy\n  } = useNovuContext();\n  const setQueryKey = useSetQueryKey();\n  const result = useQuery(setQueryKey(ORGANIZATION_QUERY_KEY), () => apiService.getOrganization(), Object.assign(Object.assign({}, options), {\n    enabled: isSessionInitialized && fetchingStrategy.fetchOrganization\n  }));\n  return result;\n};","map":{"version":3,"names":["useQuery","useNovuContext","ORGANIZATION_QUERY_KEY","useSetQueryKey","useFetchOrganization","options","apiService","isSessionInitialized","fetchingStrategy","setQueryKey","result","getOrganization","Object","assign","enabled","fetchOrganization"],"sources":["../../../src/hooks/useFetchOrganization.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,QAAQ,QAAyB,uBAAuB;AAGjE,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,sBAAsB,QAAQ,aAAa;AACpD,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,oBAAoB,GAAGA,CAClCC,OAAA,GAA4E,EAAE,KAC5E;EACF,MAAM;IAAEC,UAAU;IAAEC,oBAAoB;IAAEC;EAAgB,CAAE,GAAGP,cAAc,EAAE;EAC/E,MAAMQ,WAAW,GAAGN,cAAc,EAAE;EAEpC,MAAMO,MAAM,GAAGV,QAAQ,CACrBS,WAAW,CAACP,sBAAsB,CAAC,EACnC,MAAMI,UAAU,CAACK,eAAe,EAAE,EAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAE7BR,OAAO;IACVS,OAAO,EAAEP,oBAAoB,IAAIC,gBAAgB,CAACO;EAAiB,GAEtE;EAED,OAAOL,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}